$module()

//==============================================================================
// Utility Functions
//==============================================================================

////////////////////
string get_short_name(string longName)
{
	longName = llSHA1String(longName);
    string shortName;
    integer ptr = 0;
    integer strLength = llStringLength(longName);
    string char;
    for(ptr = 0; ptr < strLength; ptr += 2) {
        //Convert the 2-character hex code to a UTF-8 value
        //Thanks to http://wiki.secondlife.com/wiki/Chr for the concept for this code here
        integer ord = (integer)("0x" + llGetSubString(longName, ptr, ptr + 1));
        if (ord <= 0) {
        	char = "";
        	
        } else if (ord < 0x80) {
        	char = llUnescapeURL(get_url_code(ord));
        	
        } else if (ord < 0x800) {
			char = llUnescapeURL(get_url_code((ord >> 6) & 0x1F | 0xC0) + get_url_code(ord & 0x3F | 0x80));
			
        } else if (ord < 0x10000) {
        	char = llUnescapeURL(get_url_code((ord >> 12) & 0x0F | 0xE0) + get_url_code((ord >> 6) & 0x3F | 0x80) + get_url_code(ord & 0x3F | 0x80));
        	
        } else {
        	char = llUnescapeURL(get_url_code((ord >> 18) & 0x0F | 0xF0)
                        + get_url_code((ord >> 12) & 0x3F | 0x80)
                        + get_url_code((ord >> 6) & 0x3F | 0x80)
                        + get_url_code(ord & 0x3F | 0x80));
        }

		shortName += char;
    }

    return shortName;
}

////////////////////
string get_url_code(integer b)
{
    string hexd = "0123456789ABCDEF";
    return "%" + llGetSubString(hexd, b>>4, b>>4) + llGetSubString(hexd, b&15, b&15);
}

//menuFormat Created by Huns Valens
////////////////////
list menuFormat(list theButtons) {
    list btnOut;
    integer nButtons = llGetListLength(theButtons);
    integer nLastRow = nButtons % 3;
    integer lastRow = nButtons - nLastRow;
    integer row;

    // Reverse the array in chunks of 3, since an llDialog() row is 3 buttons.
    // We do not handle the first line of buttons, since they may not be a multiple of 3.
    for(row = nButtons; row >= nLastRow; row -= 3) {
        btnOut += llList2List(theButtons, row, row + 2);
    }

    // Now handle the first line of buttons, which can be 1, 2, or 3 buttons long.
    for(row = 0; row < nLastRow; row++) {
        btnOut += llList2String(theButtons, row);
    }

    return btnOut;
}
